Stmt : RETURN Exp                           { AbSyn.Return  (SOME $2, $1) }
     | RETURN                               { AbSyn.Return  (NONE,    $1) }
     | ID LPAR CallParams RPAR              { AbSyn.ProcCall(#1 $1, $3, #2 $1) }
     | ID ASSIGN Exp                        { AbSyn.Assign  (AbSyn.Var(#1 $1), $3, $2) }
     | ID LBRACKET Exps RBRACKET ASSIGN Exp { AbSyn.Assign  (AbSyn.Index(#1 $1, $3), $6, $5) }
     | IF Exp THEN  Blk ELSE  Blk           { AbSyn.IfThEl  ($2, $4, $6, $1) }
     | IF Exp THEN  Blk %prec ifprec        { AbSyn.IfThEl  ($2, $4, AbSyn.Block([], []), $1) }
     | WHILE Exp DO Blk                     { AbSyn.While   ($2, $4, $1) }
     | FOR ID EQ Exp LoopDir Exp DO Blk     { AbSyn.ForLoop (#1 $2, $4, $5, $6, $8, $1) }
;


LoopDir : DOWNTO { false }
        | TO     { true }
;
